# 変数とは、特定のデータを格納することのできる入れ物のような存在
name = "サンプルネーム"
puts name #サンプルネーム

# ローカル変数とグローバル変数
# ローカル変数とグローバル変数の大きな違いは、変数を参照できるスコープ（範囲）の違いです。

# ローカル変数基本構文
# 変数名 = オブジェクト
hello_local = "ローカル変数に文字列を格納しています"

# **ローカル変数の特徴**
# - ローカル変数を定義したファイル内でしか変数を参照できない
# - メソッドの外で定義したローカル変数と、メソッドの中で定義したローカル変数は同じ変数名でも別の変数として扱われる
# - クラスの中で定義したローカル変数と、クラスの外で定義したローカル変数は同じ変数名でも別の変数として扱われる
# メソッドの中で定義した変数と、メソッドの外で定義した変数は別の変数として扱われるのでスコープに注意

# グローバル変数基本構文
# $変数名 = オブジェクト
$hello_global = "グローバル変数に文字列を格納しています"

# **グローバル変数の特徴**
# - グローバル変数は、別のファイルからでもグローバル変数を参照できる
# グローバル変数は、他のファイルでも共通で参照できる変数となります。一見するととても便利に感じますがリスクもあります。
# グローバル変数はローカル変数とは異なり、一度変数を定義することで、別のrbファイルでも変数を参照することができます。（ファイルを読み込む必要があります。）


# 別のファイルを読み込みます
require_relative "グローバル変数" #グローバル変数.rbファイルを読み込んでいます

puts "ローカル変数"
puts hello_local #ローカル変数に文字列を格納しています

puts "--------------------"

puts "グローバル変数"
puts $hello_global #グローバル変数に代入
